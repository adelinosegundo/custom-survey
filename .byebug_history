exit
reply.mail_message.content
exit
reply.mail_message.content
exit
reply.mail_message.content
@content
recipient_data
@content
continue
@content
exit
continue
reply.recipient
continue
reply.recipient
reply
exit
reply.mail_message.survey.users_data["users"].select {|data| data["email"] == reply.recipient.email }
reply
continue
reply
continue
reply
reply.mail_message.survey.users_data["users"].select {|data| data["email"] == reply.recipient.email }
reply.mail_message.survey.users_data["users"].select {|data| data["email"] == reply.recipient.email }[0]
    7:         .users_data["users"].select {|data| data["email"] == reply.recipient.email }[0]
reply.mail_message.survey
exit
text
tags
tags = text.scan(/&lt;&lt;(^*)&gt;&gt;/).flatten
tags
exit
continue
text.scan(/<<(.*)>>/imu).flatten
text.scan(/<<(.*)>>/).flatten
text.scan /<<(.*)>>/
text.scan /<<(^*)>>/
text.scan /<<([a]*)>>/
text.scan /<<([^]*)>>/
text.scan /<<([^<>]*)>>/
text.scan /</
text.scan /&lt/
text.scan /&lt;/
text.scan /&/
text.scan /a/
text.scan
text
text.scan(/&lt;&lt;([^<>]*)&gt;&gt;/)
text.scan('/&lt;&lt;([^<>]*)&gt;&gt;/imu')
text.scan(/&lt;&lt;([^<>]*)&gt;&gt;/imu)
tags
exit
return
text
continue
help
continue
text
user_data
continue
params
continue
JSON.parse users_data_json
JSON
json
Json
users_data_json.to_json
users_data_json.to_jso
users_data_json.to_s.to_json.as_json
users_data_json.to_s.to_json
users_data_json.to_s
users_data_json.as_json
params
users_data_json
continue
users_data.tempfile.read
users_data.tempfile
users_data
